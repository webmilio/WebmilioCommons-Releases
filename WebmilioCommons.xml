<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebmilioCommons</name>
    </assembly>
    <members>
        <member name="M:WebmilioCommons.Achievements.Helper.ModAchievementHelper.RegisterAchievement(WebmilioCommons.Achievements.ModAchievement,System.Type)">
            <summary>
            If for some reason the ModAchievement Loader has not loaded the desired achievement, you can use this.
            Under no circumstances should you load an achievement that is already loaded.
            </summary>
        </member>
        <member name="T:WebmilioCommons.Achievements.ModAchievement">
            <summary>This class serves as the public surface linking the vanilla achievement system and the modded achievement system together.</summary>
        </member>
        <member name="F:WebmilioCommons.Achievements.ModAchievement.DEFAULT_COMPLETION_FLAG">
            <summary>The name of the default completion flag.</summary>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.#ctor(System.String,System.String,Terraria.Achievements.AchievementCategory)">
            <summary></summary>
            <param name="name">The displayed name for the achievement.</param>
            <param name="description">The displayed description for the achievement.</param>
            <param name="category">The vanilla category under to which this achievement belongs.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.SetDefaults">
            <summary>Called after the current object has been instantiated. You want to add your achievement conditions here.</summary>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.AddCondition(Terraria.Achievements.AchievementCondition)">
            <summary>Add a condition for achievement completion.</summary>
            <param name="condition">The condition to add.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.AddConditions(Terraria.Achievements.AchievementCondition[])">
            <summary>Add multiple conditions for achievement completion.</summary>
            <param name="conditions">The conditions to add.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.AddCompletionFlag">
            <summary>Adds a default completion flag to be manually triggered with <see cref="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag"/>.</summary>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.AddCompletionFlag(System.String)">
            <summary>Adds a named completion flag to be manually triggered with <see cref="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag"/>.</summary>
            <param name="flag">The name of the flag.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag">
            <summary>Completes the default completion flag.</summary>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag(System.String)">
            <summary>Completes the specified named completion flag.</summary>
            <param name="flag">The name of the completion flag.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag(Terraria.Player)">
            <summary>Completes the default completion flag if the given player is the local player.</summary>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag(Terraria.Player,System.String)">
            <summary>Completes the specified flag if the given player is the local player.</summary>
            <param name="player"></param>
            <param name="flag"></param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.AddTracker">
            <summary>Adds a tracker to the achievement, requiring a certain amount of tasks to be completed.</summary>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag``1">
            <summary>Completes the default completion flag for the specified type.</summary>
            <typeparam name="T">The type of the <see cref="T:WebmilioCommons.Achievements.ModAchievement"/> to complete.</typeparam>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag``1(Terraria.Player)">
            <summary>Completes the default completion flag of the specified type for the specified player.</summary>
            <typeparam name="T">The type of the <see cref="T:WebmilioCommons.Achievements.ModAchievement"/> to complete.</typeparam>
            <param name="player">The player for whom to complete said flag.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag``1(System.String)">
            <summary>Completes the given completion flag for the specified type.</summary>
            <typeparam name="T">The type of the <see cref="T:WebmilioCommons.Achievements.ModAchievement"/> to complete.</typeparam>
            <param name="flag">The name of the completion flag.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlag``1(Terraria.Player,System.String)">
            <summary>Completes the given completion flag of the specified type for the given player.</summary>
            <typeparam name="T">The type of the <see cref="T:WebmilioCommons.Achievements.ModAchievement"/> to complete.</typeparam>
            <param name="player">The player for whom to complete said flag.</param>
            <param name="flag">The name of the completion flag.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlagFor(System.String)">
            <summary>Completes the default completion flag for the given achievement.</summary>
            <param name="name">The name of the achievement.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlagFor(Terraria.Player,System.String)">
            <summary>Completes the default completion flag of the given achievement for the given player.</summary>
            <param name="player">The player for whom to complete said flag.</param>
            <param name="name">The name of the achievement.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlagFor(System.String,System.String)">
            <summary>Completes the default completion flag of the given achievement for the given player.</summary>
            <param name="name">The name of the achievement.</param>
            <param name="flag">The name of the completion flag.</param>
        </member>
        <member name="M:WebmilioCommons.Achievements.ModAchievement.CompleteFlagFor(System.String,Terraria.Player,System.String)">
            <summary>Completes the specified completion flag of the given achievement for the given player.</summary>
            <param name="name">The name of the achievement.</param>
            <param name="player">The player for whom to complete said flag.</param>
            <param name="flag">The name of the completion flag.</param>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.Name">
            <summary>The displayed name for the achievement.</summary>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.Description">
            <summary>The displayed description for the achievement.</summary>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.Category">
            <summary>The vanilla category under which the achievement falls.</summary>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.TexturePath">
            <summary>The path to the texture for the achievement.</summary>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.Autoload">
            <summary>true if the achievement be automatically created upon loading all <see cref="T:WebmilioCommons.Achievements.ModAchievement"/>.</summary>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.Mod">
            <summary>The mod from which this <see cref="T:WebmilioCommons.Achievements.ModAchievement"/> originates.</summary>
        </member>
        <member name="P:WebmilioCommons.Achievements.ModAchievement.GameAchievement">
            <summary>The vanilla category under to which this achievement belongs.</summary>
        </member>
        <member name="F:WebmilioCommons.Commons.ManagedResource.original">
            <summary>Original ticks.</summary>
        </member>
        <member name="F:WebmilioCommons.Commons.ManagedResource.remaining">
            <summary>Remaining ticks before expiration.</summary>
        </member>
        <member name="M:WebmilioCommons.Commons.ResourceManager.Finalize">
            <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        </member>
        <member name="M:WebmilioCommons.Commons.ResourceManager.Get(System.Predicate{System.IDisposable})">
            <summary>Fetches an existing instance of a resource.</summary>
            <param name="match">The match filter for the resource.</param>
            <returns>The instance matching the filter; otherwise <c>null</c> if not found.</returns>
        </member>
        <member name="M:WebmilioCommons.Commons.ResourceManager.GetOrCreate(System.Predicate{System.IDisposable},System.Func{System.IDisposable},System.Int32)">
            <summary>Fetches an existing instance of a resource or creates it if it doesn't exist.</summary>
            <param name="match">The filter for the resource.</param>
            <param name="create">The creation method for the resource.</param>
            <param name="ticksToLive">How long the resource should be kept in memory after its last use, in ticks (1 tick = 1/60 of a second).</param>
            <returns>The instance matching the filter or the created instance, depending on the <paramref name="create"/> parameter; otherwise <c>null</c> if not found.</returns>
        </member>
        <member name="M:WebmilioCommons.Commons.ResourceManager.Get``1(System.Predicate{``0})">
            <summary>Fetches an existing instance of a resource.</summary>
            <typeparam name="T">The type of resource to find.</typeparam>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Commons.ResourceManager.GetOrCreate``1(System.Predicate{``0},System.Func{``0},System.Int32)">
            <summary>Fetches an existing instance of a resource or creates it if it doesn't exist.</summary>
            <typeparam name="T">The type of resource to look for.</typeparam>
            <param name="match">The filter for the resource. If <c>default</c>, will find the first instance of the given type.</param>
            <param name="create">The creation method for the resource.</param>
            <param name="ticksToLive">How long the resource should be kept in memory after its last use, in ticks (1 tick = 1/60 of a second).</param>
            <returns>The instance matching the filter or the created instance, depending on the <paramref name="create"/> parameter; otherwise <c>null</c> if not found.</returns>
        </member>
        <member name="M:WebmilioCommons.Commons.ResourceManager.ShouldPrune(System.IDisposable)">
            <summary>Checks wether the resource should be disposed of next tick.</summary>
            <param name="disposable">The resource to verify.</param>
            <returns><c>true</c> if the resource should be disposed of; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Extensions.ChestExtensions.AddShop``1(Terraria.Chest,System.Int32@)">
            <summary>Adds an item to a shop. Use in <see cref="M:Terraria.ModLoader.GlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>.</summary>
            <typeparam name="T"></typeparam>
            <param name="shop"></param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:WebmilioCommons.Extensions.ChestExtensions.AddShop``1(Terraria.Chest,System.Int32,System.Int32@)">
            <summary>Adds an item to a shop. Use in <see cref="M:Terraria.ModLoader.GlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>.</summary>
            <typeparam name="T">The item type of the ModItem.</typeparam>
            <param name="shop"></param>
            <param name="stack">How many items in the stack being sold.</param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:WebmilioCommons.Extensions.ChestExtensions.AddShop(Terraria.Chest,System.Int32,System.Int32@)">
            <summary>Adds an item to a shop. Use in <see cref="M:Terraria.ModLoader.GlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>.</summary>
            <param name="shop"></param>
            <param name="type">The item type of the ModItem.</param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:WebmilioCommons.Extensions.ChestExtensions.AddShop(Terraria.Chest,System.Int32,System.Int32,System.Int32@)">
            <summary>Adds an item to a shop. Use in <see cref="M:Terraria.ModLoader.GlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>.</summary>
            <param name="shop"></param>
            <param name="type"></param>
            <param name="stack">How many items in the stack being sold.</param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:WebmilioCommons.Extensions.EntityExtensions.IsImmobile(Terraria.Entity,System.Boolean,System.Int32)">
            <summary></summary>
            <param name="entity"></param>
            <param name="requireTileUnder"></param>
            <param name="feetXRadius"></param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Extensions.ModExtensions.GetPacket(Terraria.ModLoader.Mod,System.Int32)">
            <summary>Returns a new instance of the packet corresponding to the specified ID.</summary>
            <param name="mod"></param>
            <param name="id">The auto-generated ID of the packet.</param>
            <returns>A new <see cref="T:WebmilioCommons.Networking.Packets.NetworkPacket"/>.</returns>
        </member>
        <member name="M:WebmilioCommons.Extensions.ModExtensions.GetPacket(Terraria.ModLoader.Mod,System.Type)">
            <summary>Returns a new instance of the packet corresponding to the specified type.</summary>
            <param name="mod"></param>
            <param name="type">The class type of the packet.</param>
            <returns>A new <see cref="T:WebmilioCommons.Networking.Packets.NetworkPacket"/>.</returns>
        </member>
        <member name="M:WebmilioCommons.Extensions.ModExtensions.PacketId(Terraria.ModLoader.Mod,WebmilioCommons.Networking.Packets.NetworkPacket)">
            <summary>Returns the auto-generated ID for the specified packet.</summary>
            <param name="mod"></param>
            <param name="packet">The packet.</param>
            <returns>The auto-generated ID of the packet.</returns>
        </member>
        <member name="M:WebmilioCommons.Extensions.PlayerExtensions.IsHoldingMiningItem(Terraria.Player)">
            <summary>Checks if the player is holding an item capable of breaking blocks (pickaxes, axes, hammers).</summary>
            <param name="player"></param>
            <returns><c>true</c> if the player is holding a mining item; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:WebmilioCommons.Extensions.RecipeExtensions.AddIngredient``1(Terraria.ModLoader.ModRecipe,System.Int32)">
            <summary>Adds an ingredient to this recipe with the given item type and stack size.</summary>
            <typeparam name="T">The type of item to add.</typeparam>
            <param name="recipe"></param>
            <param name="stack">How many of the specified item are required in the recipe.</param>
        </member>
        <member name="M:WebmilioCommons.Extensions.TypeExtensions.GetTexture(System.Type)">
            <summary>Finds the appropriate texture based solely on the type and its associated mod.</summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Globals.BetterGlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)">
            <summary>Overwritten by <see cref="T:WebmilioCommons.Globals.BetterGlobalNPC"/>. Override <see cref="M:WebmilioCommons.Globals.BetterGlobalNPC.ModSetupShop(System.Int32,Terraria.Chest,System.Int32@)"/> to define custom behavior.</summary>
            <param name="type">The NPC.</param>
            <param name="shop"></param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:WebmilioCommons.Globals.BetterGlobalNPC.ModSetupShop(System.Int32,Terraria.Chest,System.Int32@)">
            <inheritdoc cref="M:Terraria.ModLoader.GlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>
        </member>
        <member name="M:WebmilioCommons.Globals.GlobalNPCSetupShopMethods.AddSetupShopMethod(System.Int32,System.Func{WebmilioCommons.Globals.BetterGlobalNPC,WebmilioCommons.Globals.GlobalNPCSetupShopMethods.NPCSetupShopMethod})">
            <summary>Adds a method to call for a specific NPC during <see cref="M:WebmilioCommons.Globals.BetterGlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>. Call this during your mod's <see cref="M:Terraria.ModLoader.Mod.PostSetupContent"/></summary>
            <param name="type">The NPC Type.</param>
            <param name="setupShopMethod">The shop method.</param>
            <seealso cref="M:WebmilioCommons.Globals.BetterGlobalNPC.SetupShop(System.Int32,Terraria.Chest,System.Int32@)"/>
        </member>
        <member name="T:WebmilioCommons.Loaders.IAssociatedToMod">
            <summary>Implementing this interface will cause the loader to automatically feed the owner <see cref="T:Terraria.ModLoader.Mod"/> to the requested instance when using <see cref="!:Loader&lt;T&gt;.New(ushort)"/> or <see cref="M:WebmilioCommons.Loaders.Loader`1.New``1"/></summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.#ctor">
            <summary>Instantiates a new <see cref="T:WebmilioCommons.Loaders.Loader`1"/> and loads all found subtypes of <see cref="!:T"/> that are not abstract.</summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.#ctor(System.Func{System.Reflection.TypeInfo,System.Boolean})">
            <summary>
            Instantiates a new <see cref="T:WebmilioCommons.Loaders.Loader`1"/> and loads all found subtypes of <see cref="!:T"/> that are not abstract and
            match the specified <param name="loadCondition">load condition(s)</param>.
            </summary>
            <param name="loadCondition">The condition under which a subclass of <see cref="!:T"/> should be loaded.</param>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.TryLoad">
            <summary>Tries loading the current loader instance if it has not already been loaded.</summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.PreLoad">
            <summary>Called directly after the initialization checks during <see cref="M:WebmilioCommons.Loaders.Loader`1.TryLoad"/>.</summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.PostLoad">
            <summary>Called at the end of <see cref="M:WebmilioCommons.Loaders.Loader`1.TryLoad"/>.</summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.PreUnload">
            <summary>Called at the very beginning of the <see cref="M:WebmilioCommons.Loaders.Loader`1.Unload"/> method.</summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.PostUnload">
            <summary>Called at the very end of the <see cref="M:WebmilioCommons.Loaders.Loader`1.Unload"/> method.</summary>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.Add(Terraria.ModLoader.Mod,`0)">
            <summary>
            Add an generic instance to the loaded items.
            If <typeparamref name="T"/> implements <see cref="T:WebmilioCommons.Managers.IHasUnlocalizedName"/>, it will also register it using <see cref="P:WebmilioCommons.Managers.IHasUnlocalizedName.UnlocalizedName"/>.
            </summary>
            <param name="mod">The <see cref="T:Terraria.ModLoader.Mod"/> from which the item comes.</param>
            <param name="item">A generic instance.</param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.PostAdd(Terraria.ModLoader.Mod,`0)">
            <summary>Called after each time a subclass is added to the generic instances database.</summary>
            <param name="mod">The mod from which the generic instance originates.</param>
            <param name="item">A generic instances created via <see cref="M:System.Activator.CreateInstance(System.Type)"/>.</param>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.PostAdd(Terraria.ModLoader.Mod,`0,System.Type)">
            <summary>Called after each time a subclass is added to the generic instances database.</summary>
            <param name="mod">The <see cref="T:Terraria.ModLoader.Mod"/> from which the generic instance originates.</param>
            <param name="item">A generic instance.</param>
            <param name="type">The <see cref="T:System.Type"/> from which the generic instance was created.</param>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.New(System.Int32)">
            <summary>Creates a new instance of the requested type.</summary>
            <param name="id">The auto-assigned Id of the generic instance.</param>
            <returns>The newly instantiated type.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.New``1">
            <summary>Creates a new instance of the requested type.</summary>
            <typeparam name="TType">The type of the generic instance to create; must be a child of <typeparamref name="T"/> and a non-abstract <c>class</c>.</typeparam>
            <returns>The newly instantiated object.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.New(System.String)">
            <summary>Creates a new instance of the requested type.</summary>
            <param name="unlocalizedName">
            The corresponding value for <see cref="P:WebmilioCommons.Managers.IHasUnlocalizedName.UnlocalizedName"/> of the desired type.
            <typeparamref name="T"/> must implement <see cref="T:WebmilioCommons.Managers.IHasUnlocalizedName"/>.
            </param>
            <returns>The newly instantiated object if <see cref="P:WebmilioCommons.Loaders.Loader`1.TypeHasUnlocalizedName"/>; otherwise <c>default</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.GetId(`0)">
            <summary>Gets the Id of the generic instance of the same type as the one provided.</summary>
            <param name="item">The type of the generic instance.</param>
            <returns>The Id of the generic instance.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.GetId(System.Type)">
            <summary>Gets the Id of the generic instance of the same type as the one provided.</summary>
            <param name="type">The type of the generic instance.</param>
            <returns>The Id of the generic instance.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.GetId``1">
            <summary>Gets the Id of the generic instance of the same type as the one provided.</summary>
            <typeparam name="TType">The type of the generic instance.</typeparam>
            <returns>The Id of the generic instance.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.GetId(System.String)">
            <summary>
            Gets the Id of the generic instance with the provided unlocalized name.
            <see cref="P:WebmilioCommons.Loaders.Loader`1.TypeHasUnlocalizedName"/> must be true.
            </summary>
            <param name="unlocalizedName">The unlocalized name of the generic instance.</param>
            <returns>The Id of the generic instance if found; otherwise <c>default</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Loaders.Loader`1.FindGeneric(System.Predicate{`0})">
            <summary>Searches for a generic instance that matches the conditions defined by the specified predicate.</summary>
            <param name="condition">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the generic instance to search for.</param>
            <returns>The generic instance that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.</returns>
        </member>
        <member name="P:WebmilioCommons.Loaders.Loader`1.Generics">
            <summary>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains all instances created during load (generics).</summary>
        </member>
        <member name="P:WebmilioCommons.Loaders.Loader`1.Count">
            <summary>How many subtypes of <see cref="!:T"/> have been loaded.</summary>
        </member>
        <member name="P:WebmilioCommons.Loaders.Loader`1.FirstIndex">
            <summary>The first auto-assigned Id given to the generic instances.</summary>
        </member>
        <member name="P:WebmilioCommons.Loaders.Loader`1.NextIndex">
            <summary>The next auto-assigned Id for the next added generic instance.</summary>
        </member>
        <member name="P:WebmilioCommons.Loaders.SingletonLoader`2.Instance">
            <summary>Unique TYPE instance (two same <see cref="!:TLoader"/> will have the same instance), instantiated and loaded upon first call.</summary>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.Initialize">
            <summary>Called during <see cref="M:WebmilioCommons.Managers.Manager`1.TryInitialize"/>. You would usually store references to definition objects in this method.</summary>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.TryInitialize">
            <summary>Tries initializing the current instance <see cref="T:WebmilioCommons.Managers.Manager`1"/> if it has not been initialized already.</summary>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.Add``1(``0)">
            <summary>Tries adding an instance to the manager.</summary>
            <typeparam name="TSub"></typeparam>
            <param name="item"></param>
            <returns>The new instance of an instance of the same <see cref="P:WebmilioCommons.Managers.IHasUnlocalizedName.UnlocalizedName"/> has not been found; the existing instance otherwise.</returns>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.Add``1">
            <summary>Tries adding a generic instance (via new <see cref="!:TSub"/>()) to the manager.</summary>
            <typeparam name="TSub"></typeparam>
            <returns>The new instance of an instance of the same <see cref="P:WebmilioCommons.Managers.IHasUnlocalizedName.UnlocalizedName"/> has not been found; the existing instance otherwise.</returns>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.Where(System.Predicate{`0})">
            <summary>Simple search that returns elements of the manager corresponding to the specified <see cref="T:System.Predicate`1"/>.</summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.GetRandom">
            <summary>Returns a random <see cref="!:T"/> registered in the manager.</summary>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Managers.Manager`1.TryGet(System.String,`0@)">
            <summary>Tries obtaining an instance of <see cref="!:T"/> corresponding to the specified <param name="key">unlocalized name</param>.</summary>
            <param name="key">The desired instance's unlocalized name.</param>
            <param name="result"></param>
            <returns>true if the instance was found; otherwise false.</returns>
        </member>
        <member name="P:WebmilioCommons.Managers.SingletonManager`2.Instance">
            <summary>Unique TYPE instance (two same <see cref="!:TManager"/> will have the same instance), instantiated and initialized upon first call.</summary>
        </member>
        <member name="M:WebmilioCommons.WebmilioCommonsMod.Load">
            <summary></summary>
        </member>
        <member name="M:WebmilioCommons.WebmilioCommonsMod.PostSetupContent">
            <summary></summary>
        </member>
        <member name="M:WebmilioCommons.WebmilioCommonsMod.Unload">
            <summary></summary>
        </member>
        <member name="M:WebmilioCommons.WebmilioCommonsMod.HandlePacket(System.IO.BinaryReader,System.Int32)">
            <summary></summary>
            <param name="reader"></param>
            <param name="whoAmI"></param>
        </member>
        <member name="M:WebmilioCommons.WebmilioCommonsMod.PostUpdateInput">
            <summary></summary>
        </member>
        <member name="P:WebmilioCommons.WebmilioCommonsMod.Instance">
            <summary>The current loaded instance of <see cref="T:WebmilioCommons.WebmilioCommonsMod"/>.</summary>
        </member>
        <member name="T:WebmilioCommons.Networking.NetworkPacketBehavior">
            <summary>The different behaviors for network packets.</summary>
        </member>
        <member name="F:WebmilioCommons.Networking.NetworkPacketBehavior.SendToAllClients">
            <summary>
            Sends to all clients using the server as a bounce, but <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.MidReceive(System.IO.BinaryReader,System.Int32)"/> and <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PostReceive(System.IO.BinaryReader,System.Int32)"/> are not executed on the server (automatically resent).
            In the case of the server, the two aformentioned methods will always return <c>true</c>.</summary>
        </member>
        <member name="F:WebmilioCommons.Networking.NetworkPacketBehavior.SendToServer">
            <summary>Sends the packet only to the server (not resent).</summary>
        </member>
        <member name="F:WebmilioCommons.Networking.NetworkPacketBehavior.SendToAll">
            <summary>Sends to all clients using the server as a bounce (automatically resent).</summary>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.PostUnload">
            <summary></summary>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.HandlePacket(System.IO.BinaryReader,System.Int32)">
            <summary>Main method to hook into: redirect to this in your Mod's HandlePacket.</summary>
            <param name="reader"></param>
            <param name="fromWho"></param>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.SendTileEntityPacket``1(Terraria.DataStructures.TileEntity)">
            <summary>Sends a tile entity packet, providing it a tile entity.</summary>
            <typeparam name="TPacket">The type of packet to send.</typeparam>
            <param name="tileEntity">The associated tile entity.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.SendTileEntityPacket(WebmilioCommons.Networking.Packets.TileEntities.TileEntityNetworkPacket,Terraria.DataStructures.TileEntity)">
            <summary>Sends a tile entity packet, providing it a tile entity.</summary>
            <param name="packet">The packet to send.</param>
            <param name="tileEntity">The associated tile entity.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.SendPacket(WebmilioCommons.Networking.Packets.NetworkPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Sends the given packet. The packet must not be a child of <see cref="T:WebmilioCommons.Networking.Packets.TileEntities.TileEntityNetworkPacket"/>.</summary>
            <param name="packet">The packet to send.</param>
            <param name="fromWho">From who is the packet. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
            <param name="toWho">To who should the packet be sent. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.SendPacket(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Sends a new instance of the given packet. The packet must not be a child of <see cref="T:WebmilioCommons.Networking.Packets.TileEntities.TileEntityNetworkPacket"/>.</summary>
            <param name="id">The packet id.</param>
            <param name="fromWho">From who is the packet. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
            <param name="toWho">To who should the packet be sent. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.SendPacket(System.Type,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Sends a new instance of the given packet type. The packet must not be a child of <see cref="T:WebmilioCommons.Networking.Packets.TileEntities.TileEntityNetworkPacket"/>.</summary>
            <param name="type">The packet's type.</param>
            <param name="fromWho">From who is the packet. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
            <param name="toWho">To who should the packet be sent. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.NetworkPacketLoader.SendPacket``1(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Sends a new instance of the given packet type. The packet must not be a child of <see cref="T:WebmilioCommons.Networking.Packets.TileEntities.TileEntityNetworkPacket"/>.</summary>
            <typeparam name="TPacket">The packet's type.</typeparam>
            <param name="fromWho">From who is the packet. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
            <param name="toWho">To who should the packet be sent. Leaving this to its default value will make the packet rely on <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</param>
        </member>
        <member name="P:WebmilioCommons.Networking.NetworkPacketLoader.PacketIdReader">
            <summary>The reader which is used to determine the packet id. Dynamically scales with how many packets (from 0 to 255, 255 to 65536, etc...).</summary>
        </member>
        <member name="P:WebmilioCommons.Networking.NetworkPacketLoader.PacketIdWriter">
            <summary>The reader which is used to determine the packet id. Dynamically scales with how many packets (from 0 to 255, 255 to 65536, etc...).</summary>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.Receive(System.IO.BinaryReader,System.Int32)">
            <summary>
            The entire logic for receiving a packet (including resending from the server) is in this method.
            It is better to override <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PreReceive(System.IO.BinaryReader,System.Int32)"/>, <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.MidReceive(System.IO.BinaryReader,System.Int32)"/> or <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PostReceive(System.IO.BinaryReader,System.Int32)"/>, depending on the behavior you want.
            </summary>
            <param name="reader"></param>
            <param name="fromWho"></param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PreReceive(System.IO.BinaryReader,System.Int32)">
            <summary>Custom logic which should be executed before the rest of the <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Receive(System.IO.BinaryReader,System.Int32)"/> method should put in here.</summary>
            <param name="reader"></param>
            <param name="fromWho">The packet's sender.</param>
            <returns><c>true</c>to continue with the execution of the <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Receive(System.IO.BinaryReader,System.Int32)"/> method; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.ExecuteIfShould(System.IO.BinaryReader,System.Int32,WebmilioCommons.Networking.Packets.NetworkPacket.ReceiveMethod,System.Boolean)">
            <summary>Executes a provided receiver method if the <see cref="P:WebmilioCommons.Networking.Packets.NetworkPacket.Behavior"/> of the method implies it.</summary>
            <param name="reader"></param>
            <param name="fromWho"></param>
            <param name="method">The receiver method to execute if it should.</param>
            <param name="returnIfNotExecute">The value to return if the method wasn't executed.</param>
            <returns><c>true</c> if <paramref name="method"/> returned <c>true</c>; <paramref name="returnIfNotExecute"/> if the method wasn't executed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.MidReceive(System.IO.BinaryReader,System.Int32)">
            <summary>Called before the packet is resent (in cases where it should). Useful for defining custom behavior that needs to be replicated on all clients.</summary>
            <param name="reader"></param>
            <param name="fromWho">The packet's sender.</param>
            <returns><c>true</c> to continue with the execution of the <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Receive(System.IO.BinaryReader,System.Int32)"/> method; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PostReceive(System.IO.BinaryReader,System.Int32)">
            <summary>Called after the <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Receive(System.IO.BinaryReader,System.Int32)"/> method is done (all values are assigned and packet has been resent if necessary).</summary>
            <param name="reader"></param>
            <param name="fromWho">The packet's sender.</param>
            <returns><c>true</c> if the method was successfully executed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PreAssignValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)">
            <summary>Executed before <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/> is called. Do not override this unless you know what you're doing.</summary>
            <param name="fromWho">The packet's sender.</param>
            <param name="toWho">The packet's receiver.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)">
            <summary>Assigns the correct values to <paramref name="fromWho"/> and <paramref name="toWho"/>. Do not override this unless you know what you're doing.</summary>
            <param name="fromWho"></param>
            <param name="toWho"></param>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PrePopulatePacket(Terraria.ModLoader.ModPacket,System.Int32@,System.Int32@)">
            <summary>
            Called before <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PopulatePacket(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})"/>. Assigns the values used during <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PopulatePacket(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})"/>.
            Only modify this method if you know what you're doing.
            </summary>
            <param name="modPacket"></param>
            <param name="fromWho"></param>
            <param name="toWho"></param>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PopulatePacket(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reads the properties' values and feeds them to the packet.
            Only modify this method if you know what you're doing.
            </summary>
            <param name="modPacket"></param>
            <param name="fromWho"></param>
            <param name="toWho"></param>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.Send(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            The entire logic for sending packets.
            It is better to override <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PreSend(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})"/> or <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.PostSend(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})"/>, depending on the behavior you want.
            </summary>
            <param name="fromWho">The packet's sender.</param>
            <param name="toWho">The packet's receiver.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PreSend(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Called before <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Send(System.Nullable{System.Int32},System.Nullable{System.Int32})"/> and after <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.AssignInitialValues(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)"/>.</summary>
            <param name="modPacket"></param>
            <param name="fromWho"></param>
            <param name="toWho"></param>
            <returns><c>true</c> to continue into <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Send(System.Nullable{System.Int32},System.Nullable{System.Int32})"/>, <c>false</c> to stop. Returns <c>true</c> by default.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.PostSend(Terraria.ModLoader.ModPacket,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Called after <see cref="M:WebmilioCommons.Networking.Packets.NetworkPacket.Send(System.Nullable{System.Int32},System.Nullable{System.Int32})"/>.</summary>
            <param name="modPacket"></param>
            <param name="fromWho"></param>
            <param name="toWho"></param>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.MakePacket">
            <summary>Standard packet instance creation.</summary>
            <returns>An instance of <see cref="T:Terraria.ModLoader.ModPacket"/> with an auto-generated ID.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.AddAllProperties">
            <summary>Reflect the current class's properties into the cache for sending and receiving.</summary>
        </member>
        <member name="M:WebmilioCommons.Networking.Packets.NetworkPacket.AddAllProperties(System.Type)">
            <summary>Reflect through all the given properties of a type and cache them.</summary>
            <param name="type">The tyoe to reflect through.</param>
        </member>
        <member name="P:WebmilioCommons.Networking.Packets.NetworkPacket.Mod">
            <summary>The <see cref="P:WebmilioCommons.Networking.Packets.NetworkPacket.Mod"/> to which this packet belongs to. Initialized after the constructor has been called.</summary>
        </member>
        <member name="P:WebmilioCommons.Networking.Packets.NetworkPacket.Id">
            <summary>The ushort type of the packet, automatically assigned after the constructor has been called.</summary>
        </member>
        <member name="P:WebmilioCommons.Networking.Packets.NetworkPacket.Behavior">
            <summary>The packet's behavior. See <see cref="T:WebmilioCommons.Networking.NetworkPacketBehavior"/>'s documentation for more information.</summary>
        </member>
        <member name="P:WebmilioCommons.Networking.Packets.NetworkPacket.ContextEntity">
            <summary>The entity to which this instance pertains.</summary>
        </member>
        <member name="P:WebmilioCommons.Networking.Packets.NetworkPacket.ReflectedPropertyInfos">
            <summary>Don't touch this if you don't know what it does.</summary>
        </member>
        <member name="T:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers">
            <summary>Class which manages the different serialization/deserialization methods for the <see cref="T:WebmilioCommons.Networking.NetworkPacketLoader"/> and <see cref="T:WebmilioCommons.Networking.Packets.NetworkPacket"/>.</summary>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.AddSerializer``1(WebmilioCommons.Networking.Serializing.NetworkTypeSerializer)">
            <summary>Add a network property serializer for the given type. Must be called in your <see cref="M:Terraria.ModLoader.Mod.Load"/> method.</summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="serializer">The serializer (reader/writer) for the type.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.AddSerializer(System.Type,WebmilioCommons.Networking.Serializing.NetworkTypeSerializer)">
            <summary>Add a network property serializer for the given type. Must be called in your <see cref="M:Terraria.ModLoader.Mod.Load"/> method.</summary>
            <param name="type">The property type.</param>
            <param name="serializer">The serializer (reader/writer) for the type.</param>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.AddSerializers(System.Collections.Generic.Dictionary{System.Type,WebmilioCommons.Networking.Serializing.NetworkTypeSerializer})">
            <summary>Add a range of property serializers for their given types. Must be called in your <see cref="M:Terraria.ModLoader.Mod.Load"/> method.</summary>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.Has``1">
            <summary>Check if there is a serializer defined for a type.</summary>
            <typeparam name="T">The property type.</typeparam>
            <returns><c>true</c> if there is a serializer for the type; otherwise false.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.Has(System.Type)">
            <summary>Check if there is a serializer defined for a type.</summary>
            <param name="type">The property type.</param>
            <returns><c>true</c> if there is a serializer for the type; otherwise false.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.Get``1">
            <summary>Fetch a property serializer.</summary>
            <typeparam name="T">The property type.</typeparam>
            <returns>The <see cref="T:WebmilioCommons.Networking.Serializing.NetworkTypeSerializer"/> if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Networking.Serializing.NetworkTypeSerializers.Get(System.Type)">
            <summary>Fetch a property serializer.</summary>
            <param name="type">The property type.</param>
            <returns>The <see cref="T:WebmilioCommons.Networking.Serializing.NetworkTypeSerializer"/> if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="T:WebmilioCommons.NPCs.IOverridesPlayerDeathMessage">
            <summary>Allows you to implement custom logic intended to override the death message of a player when killed by an entity implementing this interface.</summary>
        </member>
        <member name="M:WebmilioCommons.NPCs.IOverridesPlayerDeathMessage.GetDeathMessage(Terraria.Player,System.Double,System.Int32,System.Boolean,Terraria.DataStructures.PlayerDeathReason)">
            <summary>Allows you to override the death message for a player when killed by the entity implementing this method.</summary>
            <param name="player"></param>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="pvp"></param>
            <param name="damageSource"></param>
            <returns>The custom death message.</returns>
        </member>
        <member name="M:WebmilioCommons.Projectiles.StandardProjectile.StandardAnimateFrame(System.Int32,System.Int32)">
            <summary></summary>
            <param name="frameCount"></param>
            <param name="frameCounterTime"></param>
        </member>
        <member name="M:WebmilioCommons.Rarities.ModRarity.#ctor(System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>Called when loading all <see cref="T:WebmilioCommons.Rarities.ModRarity"/>.</summary>
            <param name="lowerVanillaRarity">Fallback vanilla color in case the <see cref="T:WebmilioCommons.Rarities.ModRarityLoader"/> fails to load.</param>
            <param name="upperVanillaRarity"></param>
            <param name="color"></param>
        </member>
        <member name="P:WebmilioCommons.Rarities.ModRarity.Id">
            <summary>
            Rarity ID assigned from the <see cref="T:WebmilioCommons.Rarities.ModRarityLoader"/>.
            Will always be greater than the highest positive vanilla rarity unless the <see cref="T:WebmilioCommons.Rarities.ModRarityLoader"/> crashes,
            in which case it will take the value of <see cref="P:WebmilioCommons.Rarities.ModRarity.LowerVanillaRarity"/>.
            </summary>
        </member>
        <member name="P:WebmilioCommons.Rarities.ModRarity.LowerVanillaRarity">
            <summary>Used in comparing two different rarity IDs and fallback rarity ID in case the <see cref="T:WebmilioCommons.Rarities.ModRarityLoader"/> crashes.</summary>
        </member>
        <member name="M:WebmilioCommons.Rarities.ModRarityLoader.PreLoad">
            <inheritdoc />
        </member>
        <member name="M:WebmilioCommons.Rarities.ModRarityLoader.PostLoad">
            <inheritdoc />
        </member>
        <member name="M:WebmilioCommons.Rarities.ModRarityLoader.PreUnload">
            <inheritdoc />
        </member>
        <member name="M:WebmilioCommons.Rarities.ModRarityLoader.GetRarity``1">
            <summary>Gets the <see cref="T:WebmilioCommons.Rarities.ModRarity"/> instance corresponding to the specified type.</summary>
            <typeparam name="T">The type of rarity.</typeparam>
            <returns>The <see cref="T:WebmilioCommons.Rarities.ModRarity"/> from the loaded rarities if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:WebmilioCommons.Rarities.ModRarityLoader.RarityType``1">
            <summary>Gets the rarity id of the given type.</summary>
            <typeparam name="T">The rarity type.</typeparam>
            <returns></returns>
        </member>
        <member name="P:WebmilioCommons.Rarities.ModRarityLoader.HookingSuccessful">
            <summary><c>true</c> if the loader successfully hooked into the game's IL; otherwise <c>false</c>.</summary>
        </member>
        <member name="P:WebmilioCommons.Tiles.BetterGlobalTile.MiningLookupRange">
            <summary>The maximum range for which to trigger CanKillTile with Player. Set to -1 to not have a distance limit. Default is 25.</summary>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.#ctor">
            <summary>Instantiates an empty standard <see cref="T:WebmilioCommons.Time.TimeAlterationRequest"/>.</summary>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.#ctor(Terraria.Player,System.Int32,System.Int32)">
            <summary>Instantiates a standard <see cref="T:WebmilioCommons.Time.TimeAlterationRequest"/>.</summary>
            <param name="player">The player who initiated the time alteration.</param>
            <param name="duration">How long the time alteration should last.</param>
            <param name="tickRate">The rate at which the world ticks for everything else than the source. Only tick rates of 0 or 1 are supposed as of yet.</param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.#ctor(Terraria.NPC,System.Int32,System.Int32)">
            <summary>Instantiates a standard <see cref="T:WebmilioCommons.Time.TimeAlterationRequest"/>.</summary>
            <param name="npc">The player who initiated the time alteration.</param>
            <param name="duration">How long the time alteration should last.</param>
            <param name="tickRate">The rate at which the world ticks for everything else than the source. Only tick rates of 0 or 1 are supposed as of yet.</param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.#ctor(Terraria.Projectile,System.Int32,System.Int32)">
            <summary>Instantiates a standard <see cref="T:WebmilioCommons.Time.TimeAlterationRequest"/>.</summary>
            <param name="projectile">The npc who initiated the time alteration.</param>
            <param name="duration">How long the time alteration should last.</param>
            <param name="tickRate">The rate at which the world ticks for everything else than the source. Only tick rates of 0 or 1 are supposed as of yet.</param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.#ctor(Terraria.Item,System.Int32,System.Int32)">
            <summary>Instantiates a standard <see cref="T:WebmilioCommons.Time.TimeAlterationRequest"/>.</summary>
            <param name="item">The item which initiated the time alteration.</param>
            <param name="duration">How long the time alteration should last.</param>
            <param name="tickRate">The rate at which the world ticks for everything else than the source. Only tick rates of 0 or 1 are supposed as of yet.</param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.#ctor(WebmilioCommons.Time.TimeAlterationRequest.Sources,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="sourceType"></param>
            <param name="duration"></param>
            <param name="tickRate">The rate at which the world ticks for everything else than the source. Only tick rates of 0 or 1 are supposed as of yet.</param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.Send(WebmilioCommons.Networking.Packets.NetworkPacket,Terraria.ModLoader.ModPacket)">
            <summary>Writes the request's information to the provided <see cref="T:Terraria.ModLoader.ModPacket"/>. To add information to the <see cref="T:Terraria.ModLoader.ModPacket"/>, override <see cref="M:WebmilioCommons.Time.TimeAlterationRequest.ModSend(WebmilioCommons.Networking.Packets.NetworkPacket,Terraria.ModLoader.ModPacket)"/>.</summary>
            <param name="networkPacket"></param>
            <param name="modPacket"></param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.ModSend(WebmilioCommons.Networking.Packets.NetworkPacket,Terraria.ModLoader.ModPacket)">
            <summary></summary>
            <param name="networkPacket"></param>
            <param name="modPacket"></param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.Receive(WebmilioCommons.Networking.Packets.NetworkPacket,System.IO.BinaryReader)">
            <summary>Reads the request's information to the provided <see cref="T:Terraria.ModLoader.ModPacket"/>. To receive additional information to the <see cref="T:Terraria.ModLoader.ModPacket"/>, override <see cref="M:WebmilioCommons.Time.TimeAlterationRequest.ModReceive(WebmilioCommons.Networking.Packets.NetworkPacket,System.IO.BinaryReader)"/>.</summary>
            <param name="networkPacket"></param>
            <param name="reader"></param>
        </member>
        <member name="M:WebmilioCommons.Time.TimeAlterationRequest.ModReceive(WebmilioCommons.Networking.Packets.NetworkPacket,System.IO.BinaryReader)">
            <summary></summary>
            <param name="networkPacket"></param>
            <param name="modPacket"></param>
        </member>
        <member name="P:WebmilioCommons.Time.TimeAlterationRequest.LockedToSource">
            <summary>
            If true, the time alteration will only be able to be "toggled" (stopped midway) if the same person executes the required action.
            Other entities/sources are unable to change the time state if this is true.
            </summary>
        </member>
        <member name="T:WebmilioCommons.Time.TimeManagement">
            <summary>Work-in-progress, feedback is highly appreciated on any crashes found.</summary>
        </member>
        <member name="M:WebmilioCommons.Time.TimeManagement.TryAlterTime(WebmilioCommons.Time.TimeAlterationRequest,System.Boolean)">
            <summary></summary>
            <param name="request"></param>
            <param name="local">true if this comes from the local client; false if its from the network.</param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Tinq.EntityExtensions.ExceptActive``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>Generates a </summary>
            <typeparam name="T"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:WebmilioCommons.Worlds.Generation.Structures.WorldStructure.Generate(System.Int32,System.Int32)">
            <summary>Generates the structure from the top-left to the bottom-right starting at the given coordinates.</summary>
            <param name="x">The X coordinate of the origin tile..</param>
            <param name="y">The Y coordinate of the origin tile.</param>
        </member>
    </members>
</doc>
